replicaCount: 1

image:
  repository: 183631348362.dkr.ecr.ap-south-1.amazonaws.com/e-grocery/gateway
  tag: "1.0.0"

imagePullSecrets:
- name: regcred

service:
  name: web
  type: ClusterIP
  port: 8080
  targetport: 8080
  protocol: TCP


env:
  - name: product_url
    value: https:/ayushinc.online/api/product
  - name: orders_url
    value:
  - name: payment_url
    value:
  - name: odersaga_url
    value:
  - name: shipment_url
    value:
  - name: profile_url
    value:
  - name: search_url
    value:
  - name: KEYCLOAK_AUTH_URL
    value:
  - name: KEYCLOAK_REALM_NAME
    value: E-GROCERY     
  

livenessProbe:
  httpGet:
    path: /actuator/health/liveness
    port: web
    scheme: HTTP
  initialDelaySeconds: 60
  periodSeconds: 60
  failureThreshold: 5

readinessProbe:
  httpGet:
    path: /actuator/health/readiness
    port: web
    scheme: HTTP
  initialDelaySeconds: 60
  periodSeconds: 60
  failureThreshold: 5
  
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
